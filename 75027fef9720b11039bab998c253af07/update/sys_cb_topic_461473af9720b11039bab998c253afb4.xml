<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_cb_topic">
    <sys_cb_topic action="INSERT_OR_UPDATE">
        <applicability/>
        <applicability_mode>query</applicability_mode>
        <autopilot_topic>false</autopilot_topic>
        <category>5c5233639760b11039bab998c253affc</category>
        <channels/>
        <connect_queue/>
        <description>Update NeedIt Records</description>
        <expose_on_palette>false</expose_on_palette>
        <flexible_conversation_switching>false</flexible_conversation_switching>
        <graph>{
  "graph_api_version": "1.0.42",
  "goals": {
    "primary": {
      "id": "primary",
      "trigger": {
        "type": "primary"
      },
      "name": "primary",
      "applicability": "",
      "description": "",
      "nodes": {
        "df0c8b874c334e12bb7275a486c77a0b": {
          "id": "df0c8b874c334e12bb7275a486c77a0b",
          "stepType": "Start",
          "name": "Start",
          "greetingResponse": {
            "value": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "text": "I can help you find and update NeedIt records for a type of request."
                  }
                ]
              }
            ],
            "mode": "simple"
          }
        },
        "7b4d3dc1a8bb45b1abc46fc285d85c71": {
          "id": "7b4d3dc1a8bb45b1abc46fc285d85c71",
          "stepType": "TerminateGoal",
          "name": "End",
          "confirmationMessage": {
            "value": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "text": "Ask again when you need to update other NeedIt records."
                  }
                ]
              }
            ],
            "mode": "simple"
          }
        },
        "cb8c5daa997f4628ba95d42f00edb5c5": {
          "stepType": "ChoicePrompt",
          "name": "NeedIt Type",
          "prompt": {
            "value": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "text": "Which type of NeedIt record would you like to view?"
                  }
                ]
              }
            ],
            "mode": "simple"
          },
          "confirmMessage": {
            "value": "",
            "mode": "simple"
          },
          "acknowledgeMsg": {
            "value": "",
            "mode": "simple"
          },
          "applicability": {
            "value": "",
            "mode": "query"
          },
          "skippable": {
            "value": "",
            "mode": "query"
          },
          "defaultValue": {
            "value": "",
            "mode": "simple"
          },
          "variableId": "7e347942528449e289129f5cb97d322f",
          "id": "cb8c5daa997f4628ba95d42f00edb5c5",
          "hasCardHeader": false,
          "cardMetadata": {
            "mode": "card",
            "metadataScript": "",
            "cardTemplate": "",
            "cardFields": {},
            "cardDefinition": {}
          },
          "withNluUserInput": false,
          "skipIfFulfilled": false
        },
        "306b0fa7e5894cf2a6bda1e7f6de01c7": {
          "id": "306b0fa7e5894cf2a6bda1e7f6de01c7",
          "stepType": "TextOutput",
          "name": " Confirm NeedIt Type",
          "secure": false,
          "value": [
            {
              "value": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "You Selected: "
                    },
                    {
                      "type": "datapill",
                      "dataPill": {
                        "value": "{{vaInputs.needit_type}}",
                        "displayValue": "Input Variablesâž›NeedIt Type"
                      },
                      "children": [
                        {
                          "text": ""
                        }
                      ]
                    },
                    {
                      "text": ""
                    }
                  ]
                }
              ],
              "mode": "simple",
              "_key": "06d9b830f20f455c99d748d79082dc38"
            }
          ],
          "applicability": {
            "mode": "script",
            "value": "(function execute() {\n      // Return the display value (Label) for the needit_type choice\n      return 'You selected: ' + vaInputs.needit_type.getDisplayValue();\n  })()"
          }
        },
        "c5ff275cb42e483f812bffcddfa5a2fc": {
          "stepType": "ReferenceChoicePrompt",
          "name": " NeedIt List",
          "prompt": {
            "value": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "text": "Select a NeedIt record to view."
                  }
                ]
              }
            ],
            "mode": "simple"
          },
          "confirmMessage": {
            "value": "",
            "mode": "simple"
          },
          "acknowledgeMsg": {
            "value": "",
            "mode": "simple"
          },
          "applicability": {
            "value": "",
            "mode": "query"
          },
          "skippable": {
            "value": "",
            "mode": "query"
          },
          "defaultValue": {
            "value": "",
            "mode": "simple"
          },
          "variableId": "fac3a204180c47f787d5ae134025bbb0",
          "id": "c5ff275cb42e483f812bffcddfa5a2fc",
          "mode": "glide_record",
          "script": "",
          "metadataScript": "",
          "cardData": {},
          "noRecordsResponseMsg": {
            "value": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "text": "You have no open NeedIt records."
                  }
                ]
              }
            ],
            "mode": "simple"
          },
          "condition": {
            "mode": "glide_scripted_query",
            "value": "(function execute(table) {\n  \n      // Initialize an array for the list of NeedIt records to show\n      var options = [];\n  \n      // Query the table selected in the Table field for active records with the \n      // u_request_type selected in the NeedIt Type node where the user is the \n      // u_requested_for. Order the results by the When needed value.\n      var grNI = new GlideRecord(table);\n      grNI.addQuery('u_request_type',vaInputs.needit_type.getValue());\n      grNI.addQuery('active','true');\n      grNI.addQuery('u_requested_for',vaInputs.user);\n      grNI.orderBy('u_when_needed');\n      grNI.query();\n  \n      // Push a value and label pair to the array for each record the query returns.\n      // The value is the unique value. The label is the number, u_when_needed, and         // short_description values for the NeedIt record.\n      while(grNI.next()) {\n          options.push({ 'value': grNI.getUniqueValue(), 'label': grNI.getValue('number') + \" (\" + grNI.getDisplayValue('u_when_needed') + \"): \" + grNI.getValue('short_description') });\n      }\n  \n      // Return the array\n      return options;\n  \n  })(table)"
          },
          "hasCardHeader": false,
          "cardMetadata": {
            "mode": "card",
            "metadataScript": "",
            "cardTemplate": "",
            "cardFields": {},
            "cardDefinition": {}
          },
          "withNluUserInput": false,
          "skipIfFulfilled": false
        },
        "2f2f892589c84e01a9130fcd22352466": {
          "id": "2f2f892589c84e01a9130fcd22352466",
          "stepType": "RecordOutput",
          "name": "NeedIt Card",
          "variableId": "fac3a204180c47f787d5ae134025bbb0",
          "cardTemplate": "General",
          "cardFields": {},
          "mode": "variable",
          "tableName": "x_58872_needit_needit",
          "fields": [
            "priority",
            "short_description",
            "u_when_needed"
          ],
          "cardDefinition": {
            "name": "Record",
            "value": "General"
          },
          "applicability": {
            "value": "",
            "mode": "query"
          },
          "condition": {
            "mode": "glide_query",
            "value": ""
          }
        },
        "174f9ae7edf84833b86bdf233edb2acc": {
          "id": "174f9ae7edf84833b86bdf233edb2acc",
          "stepType": "Prompt",
          "name": "Search Again",
          "prompt": {
            "value": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "text": "Would you like to view another NeedIt Record?"
                  }
                ]
              }
            ],
            "mode": "simple"
          },
          "confirmMessage": {
            "value": "",
            "mode": "simple"
          },
          "acknowledgeMsg": {
            "value": "",
            "mode": "simple"
          },
          "applicability": {
            "value": "",
            "mode": "query"
          },
          "skippable": {
            "value": "",
            "mode": "query"
          },
          "defaultValue": {
            "value": "",
            "mode": "simple"
          },
          "withNluUserInput": false,
          "skipIfFulfilled": false,
          "variableId": "5a8ff52dd200430da6aa5b0fb22994b1"
        },
        "cac10a1666944dcc83a0a7940d1971f3": {
          "id": "cac10a1666944dcc83a0a7940d1971f3",
          "stepType": "Decision",
          "name": "Find more NeedIt records?"
        },
        "f20f9ed7f2cc45bfaa434249c8358669": {
          "id": "f20f9ed7f2cc45bfaa434249c8358669",
          "stepType": "Prompt",
          "name": "New When Needed Date",
          "prompt": {
            "value": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "text": "When do you need the NeedIt completed?"
                  }
                ]
              }
            ],
            "mode": "simple"
          },
          "confirmMessage": {
            "value": "",
            "mode": "simple"
          },
          "acknowledgeMsg": {
            "value": "",
            "mode": "simple"
          },
          "applicability": {
            "value": "",
            "mode": "query"
          },
          "skippable": {
            "value": "",
            "mode": "query"
          },
          "defaultValue": {
            "value": "",
            "mode": "simple"
          },
          "withNluUserInput": false,
          "skipIfFulfilled": false,
          "variableId": "1c86e1a31ee946d8b9a6ab18736d1fa3"
        },
        "1fc810865631459f8928c70e98f0d68f": {
          "id": "1fc810865631459f8928c70e98f0d68f",
          "stepType": "CrudAction",
          "name": "Change When Needed Date",
          "template": "u_when_needed={{vaInputs.new_when_needed_date}}",
          "mode": "update",
          "record": "fac3a204180c47f787d5ae134025bbb0",
          "applicability": {
            "value": "",
            "mode": "query"
          },
          "variableId": "01fdaedee9704f70a9a85d4a0bd1a33f"
        },
        "542c7ff3f37e4c4a869f07a28ba180f8": {
          "id": "542c7ff3f37e4c4a869f07a28ba180f8",
          "stepType": "RecordOutput",
          "name": " Updated NeedIt",
          "variableId": "fac3a204180c47f787d5ae134025bbb0",
          "cardTemplate": "General",
          "cardFields": {},
          "mode": "variable",
          "tableName": "x_58872_needit_needit",
          "fields": [
            "u_when_needed"
          ],
          "cardDefinition": {
            "name": "Record",
            "value": "General"
          },
          "applicability": {
            "value": "",
            "mode": "query"
          },
          "condition": {
            "mode": "glide_query",
            "value": ""
          }
        },
        "86cf1f1b696c4f77a09e932a475eb0b4": {
          "id": "86cf1f1b696c4f77a09e932a475eb0b4",
          "stepType": "Decision",
          "name": "search_count value"
        },
        "888aaedd29ce438d891fe41e4b93f819": {
          "id": "888aaedd29ce438d891fe41e4b93f819",
          "stepType": "ScriptOutput",
          "name": "Update search_count",
          "output_type": "single_part",
          "script": "(function execute() {\n    /***************************************************************\n     YOU CAN OUTPUT A SinglePartOutMsg\n     LIKE THIS:\n\n     var singleOutMsg = new sn_cs.SinglePartOutMsg();\n     singleOutMsg.setTextPart('text part');\n     singleOutMsg.setImagePart('https://docs.servicenow.com/static/custom/logo.svg');\n     singleOutMsg.setHtmlPart('&lt;h1 style=\"color:blue;\"&gt;html part&lt;/h1&gt;');\n     singleOutMsg.setLinkPart('header', 'label', 'link');\n     singleOutMsg.setButtonLinkPart('', 'label', 'link');\n     return singleOutMsg;\n     ****************************************************************/\n\n    /***************************************************************\n     OR YOU CAN OUTPUT A MultiPartOutMsg\n     LIKE THIS:\n\n     var multiOutMsg = new sn_cs.MultiPartOutMsg();\n     multiOutMsg.setNavigationLabel('Click for More');\n     multiOutMsg.addPlainTextPart('text part');\n     multiOutMsg.addHtmlPart('&lt;h1 style=\"color:blue;\"&gt;html part&lt;/h1&gt;');\n     multiOutMsg.addLinkPart('header', 'label', 'link');\n     multiOutMsg.addButtonLinkPart('', 'label', 'link');\n     return multiOutMsg;\n     ****************************************************************/\n\n    /***************************************************************\n     * NOTE: You can include conditional logic when building the\n     * output content. For example, if constructing a sn_cs.MultiPartOutMsg\n     * then you might want to add 3 parts under condition (A) but 7 parts\n     * under condition (B).\n     *\n     * HOWEVER, do NOT include conditional logic that varies the output TYPE.\n     * That is, do NOT include a condition that might return either a\n     * sn_cs.SinglePartOutMsg under condition (A) but returns a\n     * sn_cs.MultiPartOutMsg under condition (B).\n     ****************************************************************/\n       vaVars.search_count = vaVars.search_count + 1;\n})()\n",
          "applicability": {
            "value": "",
            "mode": "query"
          }
        },
        "ab28598d1c72426bbec3b66a0312ba68": {
          "id": "ab28598d1c72426bbec3b66a0312ba68",
          "stepType": "TextOutput",
          "name": "Limit Reached",
          "secure": false,
          "value": [
            {
              "value": "(function execute() {\n      // If Live Chat is available, inform users they will be transfered to a live agent\n      // otherwise, let them know how to work with more NeedIt records\n      if (vaSystem.isLiveAgentAvailable()){\n          return 'You have reached your NeedIt search limit. I will transfer you to a live agent for assistance.'\n      } else {\n          return 'You have reached your NeedIt search limit. If you need to work with multiple NeedIt records, open NeedIt &gt; My NeedIt Requests.'\n      }\n  })()",
              "mode": "script"
            }
          ],
          "applicability": {
            "value": "",
            "mode": "query"
          }
        },
        "23fb18ef203b403794d984b062fe80ed": {
          "id": "23fb18ef203b403794d984b062fe80ed",
          "stepType": "ScriptOutput",
          "name": " Transfer to Agent",
          "output_type": "single_part",
          "script": "(function execute() {\n    /***************************************************************\n     YOU CAN OUTPUT A SinglePartOutMsg\n     LIKE THIS:\n\n     var singleOutMsg = new sn_cs.SinglePartOutMsg();\n     singleOutMsg.setTextPart('text part');\n     singleOutMsg.setImagePart('https://docs.servicenow.com/static/custom/logo.svg');\n     singleOutMsg.setHtmlPart('&lt;h1 style=\"color:blue;\"&gt;html part&lt;/h1&gt;');\n     singleOutMsg.setLinkPart('header', 'label', 'link');\n     singleOutMsg.setButtonLinkPart('', 'label', 'link');\n     return singleOutMsg;\n     ****************************************************************/\n\n    /***************************************************************\n     OR YOU CAN OUTPUT A MultiPartOutMsg\n     LIKE THIS:\n\n     var multiOutMsg = new sn_cs.MultiPartOutMsg();\n     multiOutMsg.setNavigationLabel('Click for More');\n     multiOutMsg.addPlainTextPart('text part');\n     multiOutMsg.addHtmlPart('&lt;h1 style=\"color:blue;\"&gt;html part&lt;/h1&gt;');\n     multiOutMsg.addLinkPart('header', 'label', 'link');\n     multiOutMsg.addButtonLinkPart('', 'label', 'link');\n     return multiOutMsg;\n     ****************************************************************/\n\n    /***************************************************************\n     * NOTE: You can include conditional logic when building the\n     * output content. For example, if constructing a sn_cs.MultiPartOutMsg\n     * then you might want to add 3 parts under condition (A) but 7 parts\n     * under condition (B).\n     *\n     * HOWEVER, do NOT include conditional logic that varies the output TYPE.\n     * That is, do NOT include a condition that might return either a\n     * sn_cs.SinglePartOutMsg under condition (A) but returns a\n     * sn_cs.MultiPartOutMsg under condition (B).\n     ****************************************************************/\n\n  vaSystem.connectToAgent()\n\n})()\n",
          "applicability": {
            "value": "",
            "mode": "query"
          }
        }
      },
      "edges": [
        {
          "id": "4e614b5b2e3c41fcab30e08d19e9deea",
          "edgeType": "Branch",
          "source": "86cf1f1b696c4f77a09e932a475eb0b4",
          "target": "cb8c5daa997f4628ba95d42f00edb5c5",
          "sourcePort": "",
          "targetPort": "",
          "expression": {
            "mode": "script",
            "value": "(function execute() {\n      // If the value of search_count is less than 3, return true\n      // otherwise, return false\n      if (vaVars.search_count &lt; 3)\n          return true;\n      else\n          return false;\n  })()"
          },
          "label": "less than 3"
        },
        {
          "id": "569656112c644c25af9fb0839813108e",
          "edgeType": "Edge",
          "source": "df0c8b874c334e12bb7275a486c77a0b",
          "target": "cb8c5daa997f4628ba95d42f00edb5c5",
          "sourcePort": "",
          "targetPort": ""
        },
        {
          "id": "cc4e5f7338a84b9fb0d37f72a64dcf71",
          "edgeType": "Edge",
          "source": "cb8c5daa997f4628ba95d42f00edb5c5",
          "target": "306b0fa7e5894cf2a6bda1e7f6de01c7",
          "sourcePort": "",
          "targetPort": ""
        },
        {
          "id": "3c66fd7d45a842a88474f48420d94bdc",
          "edgeType": "Edge",
          "source": "306b0fa7e5894cf2a6bda1e7f6de01c7",
          "target": "c5ff275cb42e483f812bffcddfa5a2fc",
          "sourcePort": "",
          "targetPort": ""
        },
        {
          "id": "55660eea8b3a4a2c8b6921531c8beb7e",
          "edgeType": "Edge",
          "source": "c5ff275cb42e483f812bffcddfa5a2fc",
          "target": "2f2f892589c84e01a9130fcd22352466",
          "sourcePort": "",
          "targetPort": ""
        },
        {
          "id": "341da30a6379452db50e72adeaa86a96",
          "edgeType": "Edge",
          "source": "174f9ae7edf84833b86bdf233edb2acc",
          "target": "cac10a1666944dcc83a0a7940d1971f3",
          "sourcePort": "",
          "targetPort": ""
        },
        {
          "id": "e2fb388cca6744e98ca1872a6ab4d06b",
          "edgeType": "Branch",
          "source": "cac10a1666944dcc83a0a7940d1971f3",
          "target": "7b4d3dc1a8bb45b1abc46fc285d85c71",
          "sourcePort": "",
          "targetPort": "",
          "expression": {
            "value": "vaInputs.search_again=",
            "mode": "query"
          },
          "label": "No"
        },
        {
          "id": "42da5ec6bc91419488ad8ebb14d99034",
          "edgeType": "Edge",
          "source": "2f2f892589c84e01a9130fcd22352466",
          "target": "f20f9ed7f2cc45bfaa434249c8358669",
          "sourcePort": "",
          "targetPort": ""
        },
        {
          "id": "d0ee2090cf284b7394e35d242487053b",
          "edgeType": "Edge",
          "source": "f20f9ed7f2cc45bfaa434249c8358669",
          "target": "1fc810865631459f8928c70e98f0d68f",
          "sourcePort": "",
          "targetPort": ""
        },
        {
          "id": "491db2c0b73f4ed2a018d6505dbc1e0d",
          "edgeType": "Edge",
          "source": "1fc810865631459f8928c70e98f0d68f",
          "target": "542c7ff3f37e4c4a869f07a28ba180f8",
          "sourcePort": "",
          "targetPort": ""
        },
        {
          "id": "87cfde9bb06846e9a315193f6b0051a7",
          "edgeType": "Edge",
          "source": "542c7ff3f37e4c4a869f07a28ba180f8",
          "target": "174f9ae7edf84833b86bdf233edb2acc",
          "sourcePort": "",
          "targetPort": ""
        },
        {
          "id": "26411fb04d8c4cf6bc45083429c3c1cc",
          "edgeType": "Branch",
          "source": "cac10a1666944dcc83a0a7940d1971f3",
          "target": "888aaedd29ce438d891fe41e4b93f819",
          "sourcePort": "",
          "targetPort": "",
          "expression": {
            "value": "vaInputs.search_again=true",
            "mode": "query"
          },
          "label": "Yes"
        },
        {
          "id": "a6385029a7af4eefad3453a7214beb6f",
          "edgeType": "Edge",
          "source": "888aaedd29ce438d891fe41e4b93f819",
          "target": "86cf1f1b696c4f77a09e932a475eb0b4",
          "sourcePort": "",
          "targetPort": ""
        },
        {
          "id": "2f2d56811d0c4f758fe58f4b7fcddf9b",
          "edgeType": "Branch",
          "source": "86cf1f1b696c4f77a09e932a475eb0b4",
          "target": "ab28598d1c72426bbec3b66a0312ba68",
          "sourcePort": "",
          "targetPort": "",
          "expression": {
            "mode": "script",
            "value": "(function execute() {\n      // If the value of search_count is less than 3, return true\n      // otherwise, return false\n      if (vaVars.search_count &lt; 3)\n          return false;\n      else\n          return true;\n  })()"
          },
          "label": "3 or more"
        },
        {
          "id": "3f1089d2fe384e09b582aa27eb15aacd",
          "edgeType": "Edge",
          "source": "ab28598d1c72426bbec3b66a0312ba68",
          "target": "23fb18ef203b403794d984b062fe80ed",
          "sourcePort": "",
          "targetPort": ""
        },
        {
          "id": "aa9310522dae4031bcbcbf0947973af7",
          "edgeType": "Edge",
          "source": "23fb18ef203b403794d984b062fe80ed",
          "target": "7b4d3dc1a8bb45b1abc46fc285d85c71",
          "sourcePort": "",
          "targetPort": ""
        }
      ]
    }
  },
  "variables": {
    "602375d59b304691b16525ff2b715900": {
      "id": "602375d59b304691b16525ff2b715900",
      "name": "LiveAgent_application",
      "value": {
        "mode": "simple",
        "value": null
      },
      "varType": "script",
      "category": "vaVars"
    },
    "current-user": {
      "category": "vaInputs",
      "id": "current-user",
      "label": "User",
      "name": "user",
      "table": "sys_user",
      "varType": "reference"
    },
    "7e347942528449e289129f5cb97d322f": {
      "id": "7e347942528449e289129f5cb97d322f",
      "name": "needit_type",
      "label": "NeedIt Type",
      "varType": "choice",
      "choices": [
        {
          "label": "Legal",
          "value": "legal"
        },
        {
          "label": "Facilities",
          "value": "facilities"
        },
        {
          "label": " Human Resources",
          "value": " human resources",
          "checked": true,
          "meta": {}
        }
      ],
      "category": "vaInputs",
      "nodeId": "cb8c5daa997f4628ba95d42f00edb5c5",
      "isHidden": false
    },
    "fac3a204180c47f787d5ae134025bbb0": {
      "id": "fac3a204180c47f787d5ae134025bbb0",
      "name": "_needit_list",
      "label": " NeedIt List",
      "varType": "reference",
      "table": "x_58872_needit_needit",
      "category": "vaInputs",
      "nodeId": "542c7ff3f37e4c4a869f07a28ba180f8",
      "isHidden": false
    },
    "5a8ff52dd200430da6aa5b0fb22994b1": {
      "id": "5a8ff52dd200430da6aa5b0fb22994b1",
      "name": "search_again",
      "label": "Search Again",
      "varType": "boolean",
      "secure": false,
      "category": "vaInputs",
      "nodeId": "174f9ae7edf84833b86bdf233edb2acc",
      "isHidden": false
    },
    "1c86e1a31ee946d8b9a6ab18736d1fa3": {
      "id": "1c86e1a31ee946d8b9a6ab18736d1fa3",
      "name": "new_when_needed_date",
      "label": "New When Needed Date",
      "varType": "date_time",
      "secure": false,
      "category": "vaInputs",
      "mode": "date",
      "nodeId": "f20f9ed7f2cc45bfaa434249c8358669",
      "isHidden": false
    },
    "01fdaedee9704f70a9a85d4a0bd1a33f": {
      "id": "01fdaedee9704f70a9a85d4a0bd1a33f",
      "name": "change_when_needed_date",
      "label": "Change When Needed Date",
      "varType": "reference",
      "table": "",
      "inactive": true,
      "category": "vaInputs",
      "nodeId": "1fc810865631459f8928c70e98f0d68f",
      "isHidden": false
    },
    "32ceab084cdf4223a773549bdc4eb8e7": {
      "id": "32ceab084cdf4223a773549bdc4eb8e7",
      "value": {
        "mode": "simple",
        "value": "0"
      },
      "name": "search_count",
      "label": "search_count",
      "varType": "script",
      "category": "vaVars"
    }
  }
}</graph>
        <key_phrases>Update NeedIt Records,Needit Request</key_phrases>
        <library>false</library>
        <live_agent>false</live_agent>
        <name>Update NeedIt Records</name>
        <nlu_intent/>
        <nlu_intent_label/>
        <nlu_model/>
        <nlu_model_label/>
        <nlu_provider/>
        <palette_label/>
        <roles/>
        <root_topic_id/>
        <secure_custom_input_control>false</secure_custom_input_control>
        <source_topic_id/>
        <sys_class_name>sys_cb_topic</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-08-15 19:33:08</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_id>461473af9720b11039bab998c253afb4</sys_id>
        <sys_mod_count>25</sys_mod_count>
        <sys_name>Update NeedIt Records</sys_name>
        <sys_package display_value="NeedIt Virtual Agent Conversations" source="x_1068027_needit_v">75027fef9720b11039bab998c253af07</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt Virtual Agent Conversations">75027fef9720b11039bab998c253af07</sys_scope>
        <sys_update_name>sys_cb_topic_461473af9720b11039bab998c253afb4</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-08-16 15:22:00</sys_updated_on>
        <triggerable_by_notification>false</triggerable_by_notification>
        <type>STANDARD</type>
    </sys_cb_topic>
</record_update>
